#!/usr/bin/env bash

############################################
#
# Output shall be identical to running `tree`
#
############################################

shopt -s nullglob

# Hardcode vars
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

FILE='FILE'
DIR='DIR'
EXE='EXE'

# Global counters
total_directory_count=0
total_file_count=0
current_item_color=
current_item_type=
temp_frame=""


print_frame(){
	local level=$1
	local current_count=$2
	local total_count=$3
	local string=""
	if (( ${#temp_frame} < ((((level-1)) * 9)) )); then
		temp_frame="$temp_frame\U2502   "
	fi
	if (( current_count == total_count )) ; then
		string="$temp_frame\U2514"
	else
		string="$temp_frame\U251C"
	fi
	string="$string\U2500\U2500 "
	echo -en "$NC$string"
}


set_current_item_info(){
	file_path=$1
	if [ -d "$file_path" ]; then
		current_item_type=$DIR
		current_item_color=$BLUE # color for directories
	elif [ -x "$file_path" ]; then
		current_item_type=$EXE
		current_item_color=$GREEN # color for executalbes
	else
		current_item_type=$FILE
		current_item_color=$NC # no color for other files
	fi
}


tree(){
	local level=${2:-0}
	local count_at_level=0
	local current_count=0
	for f in $1 ; do
		((count_at_level++))
	done
	for f in $1 ; do
		((current_count++))
		if ((level != 0)); then
			print_frame $level $current_count $count_at_level
		fi
		set_current_item_info "$f"
				
		echo -e "${current_item_color}${f##*/}${NC}"
		if [ "$current_item_type" = "$DIR" ]; then
			((total_directory_count++))
			tree "$f/*" $(((++level)))
			temp_frame=${temp_frame%?????????}
			((level--))
		else
			((total_file_count++))
		fi
	done
}


dir=${1:-"."}
tree "$dir"
echo -e "${NC}\n$total_directory_count directories, $total_file_count files"